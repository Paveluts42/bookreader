// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: api/note.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Note struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BookId        string                 `protobuf:"bytes,2,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Text          string                 `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	UserId        string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Note) Reset() {
	*x = Note{}
	mi := &file_api_note_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_api_note_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_api_note_proto_rawDescGZIP(), []int{0}
}

func (x *Note) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Note) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

func (x *Note) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Note) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Note) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type AddNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BookId        string                 `protobuf:"bytes,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Text          string                 `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddNoteRequest) Reset() {
	*x = AddNoteRequest{}
	mi := &file_api_note_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNoteRequest) ProtoMessage() {}

func (x *AddNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_note_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNoteRequest.ProtoReflect.Descriptor instead.
func (*AddNoteRequest) Descriptor() ([]byte, []int) {
	return file_api_note_proto_rawDescGZIP(), []int{1}
}

func (x *AddNoteRequest) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

func (x *AddNoteRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AddNoteRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type AddNoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	NoteId        string                 `protobuf:"bytes,2,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddNoteResponse) Reset() {
	*x = AddNoteResponse{}
	mi := &file_api_note_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNoteResponse) ProtoMessage() {}

func (x *AddNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_note_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNoteResponse.ProtoReflect.Descriptor instead.
func (*AddNoteResponse) Descriptor() ([]byte, []int) {
	return file_api_note_proto_rawDescGZIP(), []int{2}
}

func (x *AddNoteResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *AddNoteResponse) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

type GetNotesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BookId        string                 `protobuf:"bytes,1,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotesRequest) Reset() {
	*x = GetNotesRequest{}
	mi := &file_api_note_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotesRequest) ProtoMessage() {}

func (x *GetNotesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_note_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotesRequest.ProtoReflect.Descriptor instead.
func (*GetNotesRequest) Descriptor() ([]byte, []int) {
	return file_api_note_proto_rawDescGZIP(), []int{3}
}

func (x *GetNotesRequest) GetBookId() string {
	if x != nil {
		return x.BookId
	}
	return ""
}

type GetNotesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notes         []*Note                `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotesResponse) Reset() {
	*x = GetNotesResponse{}
	mi := &file_api_note_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotesResponse) ProtoMessage() {}

func (x *GetNotesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_note_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotesResponse.ProtoReflect.Descriptor instead.
func (*GetNotesResponse) Descriptor() ([]byte, []int) {
	return file_api_note_proto_rawDescGZIP(), []int{4}
}

func (x *GetNotesResponse) GetNotes() []*Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

var File_api_note_proto protoreflect.FileDescriptor

const file_api_note_proto_rawDesc = "" +
	"\n" +
	"\x0eapi/note.proto\x12\x03api\"p\n" +
	"\x04Note\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\abook_id\x18\x02 \x01(\tR\x06bookId\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x12\n" +
	"\x04text\x18\x04 \x01(\tR\x04text\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userId\"Q\n" +
	"\x0eAddNoteRequest\x12\x17\n" +
	"\abook_id\x18\x01 \x01(\tR\x06bookId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x12\n" +
	"\x04text\x18\x03 \x01(\tR\x04text\":\n" +
	"\x0fAddNoteResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x17\n" +
	"\anote_id\x18\x02 \x01(\tR\x06noteId\"*\n" +
	"\x0fGetNotesRequest\x12\x17\n" +
	"\abook_id\x18\x01 \x01(\tR\x06bookId\"3\n" +
	"\x10GetNotesResponse\x12\x1f\n" +
	"\x05notes\x18\x01 \x03(\v2\t.api.NoteR\x05notes2|\n" +
	"\vNoteService\x124\n" +
	"\aAddNote\x12\x13.api.AddNoteRequest\x1a\x14.api.AddNoteResponse\x127\n" +
	"\bGetNotes\x12\x14.api.GetNotesRequest\x1a\x15.api.GetNotesResponseB.Z,github.com/Paveluts42/bookreader/backend/apib\x06proto3"

var (
	file_api_note_proto_rawDescOnce sync.Once
	file_api_note_proto_rawDescData []byte
)

func file_api_note_proto_rawDescGZIP() []byte {
	file_api_note_proto_rawDescOnce.Do(func() {
		file_api_note_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_note_proto_rawDesc), len(file_api_note_proto_rawDesc)))
	})
	return file_api_note_proto_rawDescData
}

var file_api_note_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_note_proto_goTypes = []any{
	(*Note)(nil),             // 0: api.Note
	(*AddNoteRequest)(nil),   // 1: api.AddNoteRequest
	(*AddNoteResponse)(nil),  // 2: api.AddNoteResponse
	(*GetNotesRequest)(nil),  // 3: api.GetNotesRequest
	(*GetNotesResponse)(nil), // 4: api.GetNotesResponse
}
var file_api_note_proto_depIdxs = []int32{
	0, // 0: api.GetNotesResponse.notes:type_name -> api.Note
	1, // 1: api.NoteService.AddNote:input_type -> api.AddNoteRequest
	3, // 2: api.NoteService.GetNotes:input_type -> api.GetNotesRequest
	2, // 3: api.NoteService.AddNote:output_type -> api.AddNoteResponse
	4, // 4: api.NoteService.GetNotes:output_type -> api.GetNotesResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_note_proto_init() }
func file_api_note_proto_init() {
	if File_api_note_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_note_proto_rawDesc), len(file_api_note_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_note_proto_goTypes,
		DependencyIndexes: file_api_note_proto_depIdxs,
		MessageInfos:      file_api_note_proto_msgTypes,
	}.Build()
	File_api_note_proto = out.File
	file_api_note_proto_goTypes = nil
	file_api_note_proto_depIdxs = nil
}
